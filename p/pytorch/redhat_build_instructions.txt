The following instructions are for building PyTorch on ppc64le. It assumes
that the user is installing on a newly installed Red Hat 7.4 system. 
PyTorch ppc64le has dependencies on Nvidia CUDA and cuDNN packages and libraries so 
the first part of the instructions reference installation of PowerAI
packages.

You may need to add EPEL to your repo list
Enable EPEL repo  (see: https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages)

$ wget -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
$ sudo rpm -ihv epel-release-latest-7.noarch.rpm
$ sudo yum makecache

Enable 'optional' and 'extras' repo channels

$ sudo yum-config-manager --enable rhel-7-for-power-le-optional-rpms
$ sudo yum-config-manager --enable rhel-7-for-power-le-extras-rpms
$ sudo yum makecache

Optional
Install VNC server so you can run a browser and login to nvidia to download 
cuDNN.
# yum install xfce4*
# yum install x11vnc.ppc64le
# x11vnc -create -forever -bg -env FD_TAG=my_xfce_1 -env FD_SESS=xfce -rfbport 5901

DKMS is required before installing CUDA drivers and libraries.
Install dkms
# sudo yum install dkms
If this fails you may need to install EPEL repository. See the following link
https://access.redhat.com/discussions/3140721

# sudo rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
# sudo yum update
# sudo yum install dkms

Download NVIDIA CUDA driver
# wget https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda-repo-rhel7-9-0-local-9.0.176-1.ppc64le-rpm

# sudo rpm -i cuda-repo-rhel7-9-0-local-9.0.176-1.ppc64le-rpm
# sudo yum clean all
# sudo yum install cuda

Install cuDNN for Power8. This requires a developer login to nvidia.com
https://developer.nvidia.com/rdp/cudnn-download
cuDNN v7.0 Library for Linux (Power8)
# cd /usr/local
# gunzip -c ~/Downloads/cudnn-9.0-linux-ppc64le-v7.tgz  |tar -xvf -


Optional magma-cuda
Download magma-cuda if you need to use some PyTorch APIs that require magma-cuda.

# yum install -y gcc-gfortran.ppc64le
# wget http://icl.utk.edu/projectsfiles/magma/downloads/magma-2.3.0.tar.gz
# gunzip -c magma-2.3.0.tar.gz | tar -xvf -
# rm magma-2.3.0.tar.gz
# cd magma-2.3.0
# cp make.inc-examples/make.inc.openblas make.inc

# yum install -y openblas.ppc64le
# yum install -y openblas-devel.ppc64le

edit make.inc and make the following changes:
GPU_TARGET ?= Kepler Pascal
NVCC      = /usr/local/cuda/bin/nvcc
OPENBLASDIR ?= /usr
CUDADIR ?= /usr/local/cuda

LIBDIR    = -L$(CUDADIR)/lib64 \
            -L$(OPENBLASDIR)/lib64

# make install

Install other pytorch pre-requisites.
# yum install cmake.ppc64le -y

In newer releases of pytorch , it may require cmake version 3 and above. In this case install cmake3
# yum install cmake3 -y

And uninstall cmake.
link cmake3 to cmake
# ln -s /usr/bin/cmake3 /usr/bin/cmake

You can also install cmake from conda but make sure you are using 3.6.3
# conda install cmake==3.6.3

Install anaconda. Anaconda is recommended by the pytorch community to run pytorch.
# curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-ppc64le.sh 
# chmod +x ~/miniconda.sh
# ~/miniconda.sh -b -p /opt/conda
# rm ~/miniconda.sh
# /opt/conda/bin/conda install numpy pyyaml scipy ipython

# For MPI support 
# yum install openmpi openmpi-devel -y

Build and install pytorch.  Note that we checkout from master with a specific commit.
This was the last known commit that had 99% of the test passing on ppc64le.
Commit (July 25, 2018):  3be8e4db51e8c6280a00f01f9f5e602b7a4fdd54

# git clone https://github.com/pytorch/pytorch.git
# cd pytorch
# git submodule update --init --recursive
# sudo /opt/conda/bin/python setup.py install

to start using pytorch be sure to export 
export LD_LIBRARY_PATH=/usr/local/magma/lib:/usr/lib64:$LD_LIBRARY_PATH
